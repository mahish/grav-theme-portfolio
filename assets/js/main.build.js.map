{"version":3,"file":"main.build.js","sources":["../../src/js/main.js","../../src/js/dom-load.js","../../src/js/utilities.js","../../src/js/window-load.js"],"sourcesContent":["import domLoad from './dom-load';\nimport windowLoad from './window-load';\n\n// The DOMContentLoaded event fires when parsing of the current page is complete. DOMContentLoaded is a great event to use to hookup UI functionality to complex web pages.\ndocument.addEventListener('DOMContentLoaded', domLoad, false);\n\n// The load event fires when all files have finished loading from all resources, including ads and images.\nwindow.addEventListener('load', windowLoad, false);\n","import { _toggleState } from './utilities';\n\nconst domLoad = () => {\n  // const windowWidth = window.outerWidth;\n  const $header = document.querySelector('#header');\n  const $menu = $header.querySelector('.main-menu');\n  const $mobileMenuToggle = $header.querySelector('#mobile-menu-toggle');\n\n  // Mobile menu\n  $mobileMenuToggle.addEventListener('click', (event) => {\n    event.preventDefault();\n    _toggleState($menu, 'closed', 'open');\n  }, false);\n};\n\nexport default domLoad;\n\n","export function _toggleState($element, stateOne, stateTwo) {\n  $element.setAttribute('data-state', $element.getAttribute('data-state') === stateOne ? stateTwo : stateOne);\n}\n","const windowLoad = () => {\n\n  document.querySelector('.loading').classList.remove('loading');\n};\n\nexport default windowLoad;\n"],"names":["document","addEventListener","$header","querySelector","$menu","event","$element","stateOne","stateTwo","preventDefault","setAttribute","getAttribute","window","classList","remove"],"mappings":"yBAIAA,SAASC,iBAAiB,mBCFV,eAERC,EAAUF,SAASG,cAAc,WACjCC,EAAQF,EAAQC,cAAc,cACVD,EAAQC,cAAc,uBAG9BF,iBAAiB,QAAS,SAACI,GCTxC,IAAsBC,EAAUC,EAAUC,IDUvCC,iBCV6BF,EDWf,SCXyBC,EDWf,QCXLF,EDWZF,GCVNM,aAAa,aAAcJ,EAASK,aAAa,gBAAkBJ,EAAWC,EAAWD,KDW/F,KDRkD,GAGvDK,OAAOX,iBAAiB,OGPL,oBAERE,cAAc,YAAYU,UAAUC,OAAO,aHKV"}